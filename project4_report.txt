1. Basic information
Team number (e.g., 01) : 
#1 Student ID : 47335412
#1 Student Name : Ziyuan Cui
#2 Student ID : 78162510
#2 Student Name : Zhongwei Wang
OS (bit) : MacOS 10.14
gcc version : 


2. Catalog information about Index
- Show your catalog information about an index (tables, columns). 

Index Catelog:
    FileName: "indexCatelog"
    Columns: Table-Name Attribute-Name IndexFile-Name


3. Block Nested Loop Join (If you have implemented this feature)
- Describe how your block nested loop join works (especially, how you manage the given buffers.)

    - For the hashmap, we use Map<T, void*> to store the records of give limit block size.
    - To limit the input records with the size of block. We calculate the sum each size of records.
    if sum > blocksize - maxRecordSize, then load next block.


4. Index Nested Loop Join (If you have implemented this feature)
    - We load record from left table one by one, then find the corresponding joint right record using the index.
    This method is efficient since index could reduce searching time significantly.


5. Grace Hash Join (If you have implemented this feature)
- Describe how your grace hash join works (especially, in-memory structure).
- No, we didn't implement this.


6. Aggregation
- Describe how your aggregation (basic, group-based hash) works.
    - We only implemented basic aggregation operations(MAX, MIN, COUNT, AVG, SUM). The implementation is intuitive.
    We traverse all the record in the table and calculate the corresponding result.



7. Implementation Detail
- Have you added your own source file (.cc or .h)
- No, we didn't.

- Have you implemented any optional features? Then, describe them here.
- No

- Other implementation details:


6. Other (optional)
- Freely use this section to tell us about things that are related to the project 4, but not related to the other sections (optional)
- 
